package jauntlet.map.builder;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Tony
 */
public class NewMap extends javax.swing.JPanel
{
    private static final String MAP_EXISTS_ERROR = "A map of that name already exists";
    private static final String MAP_NAME_REQUIRED = "Name Required";
    private JFileChooser fc;
    private MapLoader loader;
    private AvailableSprites as;

    /**
     * Creates new form NewMap
     */
    public NewMap(MapLoader loader, AvailableSprites as)
    {
        this.loader = loader;
        this.as = as;
        initComponents();
        mapNameError.setText(MAP_NAME_REQUIRED);
        mapNameError.setVisible(false);
        sizeError.setVisible(false);
        
        fc = new JFileChooser();
        fc.setCurrentDirectory(new File("."));
        fc.setFileFilter(new FileFilter()
        {
            @Override
            public boolean accept(File f)
            {
                return f.getName().endsWith(MapLoader.MAP_EXTENSION);
            }

            @Override
            public String getDescription()
            {
                return "Jauntlet Game Files";
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        widthInput = new javax.swing.JTextField();
        heightInput = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mapNameInput = new javax.swing.JTextField();
        mapNameError = new javax.swing.JLabel();
        sizeError = new javax.swing.JLabel();

        jLabel1.setText("Width");

        jLabel2.setText("Height");

        widthInput.setText("50");

        heightInput.setText("50");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                createButtonActionPerformed(evt);
            }
        });

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loadButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Jauntlet Map Generator");

        jLabel4.setText("Name");

        mapNameError.setForeground(new java.awt.Color(204, 0, 51));
        mapNameError.setText("Name Required");

        sizeError.setForeground(new java.awt.Color(204, 0, 51));
        sizeError.setText("Sizes must be positive numbers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sizeError))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(widthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(heightInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mapNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createButton)
                            .addComponent(mapNameError)
                            .addComponent(loadButton))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(mapNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mapNameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(widthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(heightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sizeError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadButton)
                .addContainerGap(150, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed

        try
        {
            int width = Integer.parseInt(widthInput.getText());
            int height = Integer.parseInt(widthInput.getText());
            sizeError.setVisible(false);
            String mapName = mapNameInput.getText().trim();
            if (mapName.length() > 0)
            {
                if (! MapLoader.exists(mapName))
                {
                    mapNameError.setVisible(false);
                    new MapEditorWindow(width, height, mapName, as);
                } else
                {
                    mapNameError.setText(MAP_EXISTS_ERROR);
                    mapNameError.setVisible(true);
                }
            } else
            {
                mapNameError.setText(MAP_NAME_REQUIRED);
                mapNameError.setVisible(true);
            }
        } catch (NumberFormatException e)
        {
            sizeError.setVisible(true);
        }
    }//GEN-LAST:event_createButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loadButtonActionPerformed
    {//GEN-HEADEREND:event_loadButtonActionPerformed
        try
        {
            switch (fc.showOpenDialog(this))
            {
                case JFileChooser.APPROVE_OPTION:
                    File chosen = fc.getSelectedFile();
                    MapEditor map;
                    map = (MapEditor) loader.loadMap(chosen, true);
                    new MapEditorWindow(map, as);
                    break;
                default:
                    break;
            }
        } catch (IOException ex)
        {
            Logger.getLogger(NewMap.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error loading the map");
        }

    }//GEN-LAST:event_loadButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JTextField heightInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton loadButton;
    private javax.swing.JLabel mapNameError;
    private javax.swing.JTextField mapNameInput;
    private javax.swing.JLabel sizeError;
    private javax.swing.JTextField widthInput;
    // End of variables declaration//GEN-END:variables
}
